/*
* This program and the accompanying materials are made available under the terms of the *
* Eclipse Public License v2.0 which accompanies this distribution, and is available at *
* https://www.eclipse.org/legal/epl-v20.html                                      *
*                                                                                 *
* SPDX-License-Identifier: EPL-2.0                                                *
*                                                                                 *
* Copyright Contributors to the Zowe Project.                                     *
*                                                                                 *
*/

import { ITaskFunction } from "./GulpHelpers";

const gutil = require("gulp-util");
const fs = require("fs");
const glob = require("glob").Glob;

const cleanTypedoc: ITaskFunction = async () => {
    // Patten to find all html pages generated by typedoc
    const pattern = "docs/typedoc/**/*.html";
    gutil.log("Looking for:", gutil.colors.yellow(pattern));

    // Information to remove from all files
    const infoToRemove = "https://github.com/gizafoundation/brightside";

    try {
        // Get the folder contents
        const typedocFolder = glob(pattern, {mark: true, sync: true});
        if (typedocFolder.found.length === 0) {
            // Advise the user to run 'npm run typedoc first
            throw new Error(`We could not find ${pattern}. Use "npm run typedoc" before executing this task`);
        }

        // Loop through each found file
        typedocFolder.found.forEach((filename: string, fileIndex: number) => {
            gutil.log(`Cleaning file ${fileIndex + 1}/${typedocFolder.found.length} : ${gutil.colors.blue(filename)}`);

            // Replace all the information requested in every file
            fs.writeFileSync(filename, fs.readFileSync(filename).toString().replace(new RegExp(infoToRemove, "g"), "***REMOVED***"));
        });
    } catch (err) {
        throw new Error(gutil.colors.red(err.message));
    }
};
cleanTypedoc.description = "Clean the generated typedoc";

exports.cleanTypedoc = cleanTypedoc;
