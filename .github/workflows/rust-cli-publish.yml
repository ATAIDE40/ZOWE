name: Rust CLI Publish

on:
  push:
    branches:
        - "master"
        - "next"
        - "next-zowex-rhel7"  # TODO Delete me
    paths:
    - 'zowex/**'
    - '.github/workflows/rust-cli*.yml'

jobs:

  release:

    name: Create GitHub Release
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Get version
      id: get-version
      run: |
        cd zowex
        echo "::set-output name=ZOWEX_VERSION::$(cargo pkgid | cut -d# -f2 | cut -d: -f2)"

    # - name: Create Release
    #   id: create_release
    #   uses: actions/create-release@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     tag_name: native-v${{ steps.get-version.outputs.ZOWEX_VERSION }}
    #     release_name: Native Client Release ${{ steps.get-version.outputs.ZOWEX_VERSION }}
    #     body: |
    #       Native Zowe CLI client which communicates with a "daemon" version of Zowe CLI.
    #     draft: false
    #     prerelease: false

    - name: Output Release URL File
      # run: echo "${{ steps.create_release.outputs.upload_url }}" > zowex/release_url.txt
      run: echo "fake_release_url" > zowex/release_url.txt

    - run: "ls -la"

    - uses: actions/upload-artifact@v2
      with:
        name: repo
        path: |
          zowex/**
          !.git

  build-macos:
    name: Build

    needs: release

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest]

    steps:

    - uses: actions/download-artifact@v2
      with:
        name: repo

    - name: Build
      run: cargo build --verbose --release

    - name: Get Upload URL
      id: get_upload_url
      run: echo "::set-output name=upload_url::$(cat release_url.txt)"

    - run: echo ${{ steps.get_upload_url.outputs.upload_url }}

    - name: Create Archive
      run: |
        cd target/release
        tar -cvzf zowex.tgz zowex

    # - name: Upload Release Asset
    #   id: upload-release-asset
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.get_upload_url.outputs.upload_url }}
    #     asset_path: target/release/zowex.tgz
    #     asset_name: "${{matrix.os}}/zowex.tgz"
    #     asset_content_type: application/octet-stream
    - uses: actions/upload-artifact@v2
      with:
        name: "zowex-${{matrix.os}}"
        path: target/release/zowex.tgz


  build-ubuntu:
    name: Build

    needs: release

    runs-on: ${{ matrix.os }}

    # Need to build in container with old version of GLIBC to support RHEL 7
    # https://kobzol.github.io/rust/ci/2021/05/07/building-rust-binaries-in-ci-that-work-with-older-glibc.html
    container: quay.io/pypa/manylinux2014_x86_64

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]

    steps:

    - uses: actions/download-artifact@v2
      with:
        name: repo

    - name: Build
      run: cargo build --verbose --release

    - name: Get Upload URL
      id: get_upload_url
      run: echo "::set-output name=upload_url::$(cat release_url.txt)"

    - run: echo ${{ steps.get_upload_url.outputs.upload_url }}

    - name: Create Archive
      run: |
        cd target/release
        tar -cvzf zowex.tgz zowex

    # - name: Upload Release Asset
    #   id: upload-release-asset
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.get_upload_url.outputs.upload_url }}
    #     asset_path: target/release/zowex.tgz
    #     asset_name: "${{matrix.os}}/zowex.tgz"
    #     asset_content_type: application/octet-stream
    - uses: actions/upload-artifact@v2
      with:
        name: "zowex-${{matrix.os}}"
        path: target/release/zowex.tgz


  build-windows:
    name: Build

    needs: release

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]

    steps:

    - uses: actions/download-artifact@v2
      with:
        name: repo

    - name: Build
      run: cargo build --verbose --release

    - name: Get Upload URL
      id: get_upload_url
      run: echo "::set-output name=upload_url::$(type release_url.txt)"

    - run: echo "${{ steps.get_upload_url.outputs.upload_url }}"

    - name: Create Archive
      run: |
        cd target/release
        tar -cvzf zowex.tgz zowex.exe

    # - name: Upload Release Asset
    #   id: upload-release-asset
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.get_upload_url.outputs.upload_url }}
    #     asset_path: target\release\zowex.tgz
    #     asset_name: "${{matrix.os}}/zowex.tgz"
    #     asset_content_type: application/octet-stream
    - uses: actions/upload-artifact@v2
      with:
        name: "zowex-${{matrix.os}}"
        path: target/release/zowex.tgz
